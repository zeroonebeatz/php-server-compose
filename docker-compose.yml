version: '3'

services:
    web:
        image: nginx:1.13.2
        ports:
            - "8080:80"
        links:
            - php
        volumes:
            - ./app:/var/www
            - ./docker/nginx/conf.d:/etc/nginx/conf.d #TODO use sites-enabled
        container_name: nginx
        networks:
            app_net:
               ipv4_address: 10.1.0.100 
        restart: always
    php:
        build:
            context: ./docker/dockerfiles/php/
            dockerfile: php.docker
            args: 
                UID: ${PUID}
                GID: ${PGID}
        links:
            - mysql
            - psql
            - cache
        volumes:
            - ./app:/var/www
            - ~/.ssh:/home/$USER/.ssh
            - /etc/passwd:/etc/passwd:ro
            - /etc/group:/etc/group:ro
            - ./docker/dockerfiles/php/schedule_opts.sh:/usr/local/bin/schedule_opts.sh
            - ./docker/dockerfiles/php/schedule:/etc/init.d/schedule
        container_name: php
        networks:
            app_net:
                ipv4_address: 10.1.0.101 
        user: ${PUID}:${PGID}
        restart: always
    nodejs:
        build:
            context: ./docker/dockerfiles/js/
            dockerfile: nodejs.docker
            args: 
                UID: ${PUID}
                GID: ${PGID}
        volumes:
            - ./app:/var/www
        working_dir: /var/www
        container_name: nodejs
        tty: true
        networks:
            app_net:
               ipv4_address: 10.1.0.104 
        user: ${PUID}:${PGID}
    mysql:
        image: mysql:5.7
        container_name: mysql
        command: --sql_mode="" --character-set-server=utf8 --collation-server=utf8_unicode_ci
        environment:
            MYSQL_DATABASE: ${DB_NAME}
            MYSQL_ROOT_USER: ${DB_USER}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        volumes:
            - ./docker/storages/mysql/init:/docker-entrypoint-initdb.d
            - ./docker/storages/mysql/db:/var/lib/mysql
        networks:
            app_net:
               ipv4_address: 10.1.0.102 
#- ./docker/storages/mysql/my.cnf:/etc/mysql/mysql.conf.d/my.cnf
        restart: always
    psql:
        image: postgres:10.1
        container_name: psql
        restart: always
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        volumes:
            - ./docker/storages/postgres/:/docker-entrypoint-initdb.d/
        networks:
            app_net:
               ipv4_address: 10.1.0.103 
    cache:
        image: redis:3-alpine
        container_name: redis
        restart: always
        networks:
            - app_net
networks:
    app_net:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: 10.1.0.0/24
