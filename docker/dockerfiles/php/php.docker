FROM php:7.1.17-fpm

#on kernel >= 4.19 needed command
# echo N | sudo tee /sys/module/overlay/parameters/metacopy

ARG UID
ARG GID 
ARG USERNAME=app
ARG XDEBUG_CONF_PATH=/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

RUN apt-get update && apt-get install -y \
    apt-utils \
    git \
    libcurl4-gnutls-dev \
    libfreetype6-dev \
    libjpeg-dev \
    libmcrypt-dev \
    libpng-dev \
    libxml2-dev \
    libzip-dev \
    libpq-dev \
    openssl \
    unzip \
    zip \
    zlib1g-dev \
    libicu-dev \
    libtidy-dev \
    g++

RUN docker-php-ext-install -j$(nproc) \
    curl \
    dom \
    exif \
    iconv \
    json \
    mysqli \ 
    opcache \
    pdo \
    pdo_mysql \
    pgsql \
    pdo_pgsql \
    xml \
    zip \
    mcrypt \
    tidy

# Intl - install
RUN docker-php-ext-configure intl
RUN docker-php-ext-install intl

# Xdebug - install and configure 
RUN pecl install xdebug \
    && docker-php-ext-enable xdebug \
    && echo "xdebug.remote_enable=1" >> ${XDEBUG_CONF_PATH} \
    && echo "xdebug.remote_autostart=1" >> ${XDEBUG_CONF_PATH} \
    && echo "xdebug.remote_default=1" >> ${XDEBUG_CONF_PATH} \
    && echo "xdebug.remote_handler=dbgp" >> ${XDEBUG_CONF_PATH} \
    && echo "xdebug.remote_port=9000" >> ${XDEBUG_CONF_PATH} \
    && echo "xdebug.idekey=docker" >> ${XDEBUG_CONF_PATH} \
    && echo "xdebug.remote_connect_back=1" >> ${XDEBUG_CONF_PATH}
#    && echo "xdebug.remote_break_on_open=1" >> ${XDEBUG_CONF_PATH}

# Postgre PDO - install 
RUN docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql
RUN docker-php-ext-install -j$(nproc) pgsql pdo_pgsql

# GD - install
RUN docker-php-ext-configure gd \
        --with-freetype-dir=/usr/include/ \
        --with-jpeg-dir=/usr/include/ 
RUN docker-php-ext-install -j$(nproc) gd 

# PHP - configure
COPY ./php.ini "$PHP_INI_DIR/php.ini"

# User - configure
RUN echo "${USERNAME}:x:${GID}:" >> /etc/group
RUN echo "${USERNAME}:x:${UID}:${GID}:${USERNAME},,,:/home/${USERNAME}:" >> /etc/passwd
RUN mkdir /home/${USERNAME}
RUN chown -R ${UID}:${GID} /home/${USERNAME}
RUN chown -R ${UID}:${GID} /tmp

# Composer - install
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
