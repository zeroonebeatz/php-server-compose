version: '3'

services:
    web:
        image: nginx:${NGINX_VERSION}
        ports:
            - "8080:80"
        links:
            - php
        volumes:
            - ./app:/var/www
            - ./docker/nginx/conf.d:/etc/nginx/conf.d
        container_name: nginx
        networks:
            app_net:
               ipv4_address: ${IPV4_MASK}.100 
        restart: always
    php:
        build:
            context: ./docker/dockerfiles/php/
            dockerfile: php.docker
            args: 
                UID: ${PUID}
                GID: ${PGID}
                USERNAME: $USER
                GEARMAN_VERSION: ${GEARMAN_VERSION}
        links:
            - mysql
            - psql
            - redis
            - gearman
            - memcached
        volumes:
            - ./app:/var/www
            - ~/.ssh:/home/$USER/.ssh
            - ./docker/dockerfiles/php/schedule_opts.sh:/usr/local/bin/schedule_opts.sh
            - ./docker/dockerfiles/php/schedule:/etc/init.d/schedule
        container_name: php
        environment:
            XDEBUG_CONFIG: 'idekey=docker'
        networks:
            app_net:
                ipv4_address: ${IPV4_MASK}.101 
        user: ${PUID}:${PGID}
        restart: always
    nodejs:
        build:
            context: ./docker/dockerfiles/js/
            dockerfile: nodejs.docker
            args: 
                UID: ${PUID}
                GID: ${PGID}
        volumes:
            - ./app:/var/www
        working_dir: /var/www
        container_name: nodejs
        tty: true
        networks:
            app_net:
               ipv4_address: ${IPV4_MASK}.104 
        user: ${PUID}:${PGID}
    mysql:
        image: mysql:${MYSQL_VERSION}
        container_name: mysql
        command: --sql_mode="" --character-set-server=utf8 --collation-server=utf8_unicode_ci
        environment:
            MYSQL_DATABASE: ${DB_NAME}
            MYSQL_ROOT_USER: ${DB_USER}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        volumes:
            - ./docker/storages/mysql/init:/docker-entrypoint-initdb.d
            - ./docker/storages/mysql/db:/var/lib/mysql
        networks:
            app_net:
               ipv4_address: ${IPV4_MASK}.102 
        restart: always
    psql:
        image: postgres:${POSTGRES_VERSION}
        container_name: psql
        restart: always
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        volumes:
            - ./docker/storages/postgres/:/docker-entrypoint-initdb.d/
        networks:
            app_net:
               ipv4_address: ${IPV4_MASK}.103 
    redis:
        image: redis:${REDIS_VERSION}
        container_name: redis
        restart: always
        networks:
            - app_net
    memcached:
        container_name: memcached
        image: memcached:${MEMCACHED_VERSION}
        restart: always
        networks:
            - app_net
    gearman:
        build:
            args:
                GID: ${PGID}
                UID: ${PUID}
            context: ./docker/dockerfiles/gearman/
            dockerfile: gearman.docker
        container_name: gearman
        restart: always
        tty: true
        networks:
            app_net:
                ipv4_address: ${IPV4_MASK}.106
        user: ${PUID}:${PGID}
networks:
    app_net:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: ${IPV4_MASK}.0/24
